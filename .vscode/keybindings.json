// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "shift+cmd+enter",
    "command": "workbench.action.terminal.focus"
  },
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+k",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+w",
    "command": "workbench.action.terminal.kill"
  },
  {
    "key": "shift+cmd+t",
    "command": "workbench.action.terminal.newInActiveWorkspace"
  },
  {
    "key": "shift+cmd+enter",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+cmd+u",
    "command": "editor.action.transformToUppercase"
  },
  {
    "key": "cmd+ctrl+n",
    "command": "explorer.newFolder"
  },
  {
    "key": "cmd+k cmd+d",
    "command": "-editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+w v",
    "command": "workbench.action.splitEditor",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+alt+cmd+[IntlYen]",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "ctrl+w l",
    "command": "workbench.action.focusRightGroup",
    "when": "!terminalFocus"
  },
  {
    "key": "cmd+k cmd+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+w h",
    "command": "workbench.action.focusLeftGroup",
    "when": "!terminalFocus"
  },
  {
    "key": "cmd+k cmd+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "cmd+k cmd+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "cmd+k cmd+up",
    "command": "-workbench.action.focusAboveGroup"
  },
  {
    "key": "cmd+k l",
    "command": "-quokka.createFile",
    "when": "!quokka.isLiveShareClient && !terminalFocus"
  },
  {
    "key": "cmd+k s",
    "command": "-quokka.stopCurrent",
    "when": "quokka.hasActiveSession && !quokka.isLiveShareClient && !terminalFocus"
  },
  {
    "key": "cmd+k s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "cmd+enter",
    "command": "-mysql.runSQL",
    "when": "editorLangId == 'cql' || editorLangId == 'sql'"
  },
  {
    "key": "cmd+enter",
    "command": "-mysql.mock.run",
    "when": "resourceFilename =~ /mock\\.json$/"
  },
  {
    "key": "cmd+k c",
    "command": "-workbench.files.action.compareWithClipboard"
  },
  {
    "key": "shift+cmd+k",
    "command": "-composer.openAsBar"
  },
  {
    "key": "ctrl+w o",
    "command": "workbench.action.joinAllGroups",
    "when": "!terminalFocus"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "alt+cmd+o",
    "command": "-create.new"
  },
  {
    "key": "shift+cmd+n",
    "command": "create.newFromCurrent"
  },
  {
    "key": "shift+alt+cmd+o",
    "command": "-create.newFromCurrent"
  },
  {
    "key": "shift+enter",
    "command": "-python.execInREPL",
    "when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !accessibilityModeEnabled && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
  },
  {
    "key": "shift+enter",
    "command": "-python.execSelectionInTerminal",
    "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
  },
  {
    "key": "cmd+enter",
    "command": "-notebook.cell.chat.acceptChanges",
    "when": "notebookEditorFocused && !inputFocus && !notebookCellEditorFocused && notebookChatOuterFocusPosition == 'below'"
  },
  {
    "key": "ctrl+y",
    "command": "acceptAlternativeSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "shift+enter",
    "command": "-acceptAlternativeSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+n",
    "command": "explorer.newFile"
  },
  {
    "key": "cmd+i",
    "command": "composerMode.agent"
},
{
    "key": "shift+enter",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
        "text": "\\\r\n"
    },
    "when": "terminalFocus"
}
]
